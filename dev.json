{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
  "devDisksUrl": {
      "value": null,
      "type": "string",
      "metadata": {
        "description": "URL for the Oracle Disk Create template, used to create all data disks, reused here the disks as well"
      }
    },
    "nodeName": {
      "value": null,
      "type": "Object",
      "metadata": {
        "description": "Name of the scale set, i.e. jpdc-dev"
      }
    },
	"adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
 "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "settings": {
      "value": null,
      "type": "object",
      "metadata": {
        "description": "Object Containing all of the common settings for AD, api versions, VM Sizing, etc. See the parameters-XXX.json."
      }
    },
	"availabilitySetName": {
      "value": null,
      "type": "String",
      "metadata": {
        "description": "Name of the availability set to have each node part of"
      }
    }
    },

  "variables": {
    "imageVHDUri": "[parameters('settings').imageVHDUri]",
    "image": "[concat(parameters('nodeName').name, '-img')]",
    "osdisk": "[concat(parameters('nodeName').name, '-osdisk')]",
    "diskPre": "[concat(parameters('nodeName').name, '-dsk-')]",
    "vmName": "[concat(parameters('nodeName').name,'-vm')]",
    "vmSize": "[parameters('settings').vmSizes.devvmsize]",
    "count": "[parameters('settings').nodeCount.devvm]",

    "NICName": "[concat(parameters('nodeName').name, '-nic1')]",
    "ipArray": "[parameters('settings').network.devNodeIps]",
"lbID": "[resourceId('Microsoft.Network/loadBalancers','JPDC-LB')]",
"backendpoolname": "jpdc-dev-pool",
    "devVnetRg": "[parameters('settings').network.devVnetRg]",
    "devVnet": "[parameters('settings').network.devVnet]",
    "devSubnet": "[parameters('settings').network.devSubnet]",
	"devVMmNsg":"[parameters('settings').network.devVMmNsg]",
	"diskCreate": "[parameters('settings').vmDisks]",
	"devNodePre": "[concat('jpdc-', toLower(parameters('settings').stage), parameters('settings').locationAbbrv)]"

  },

  "resources": [
    {
          "comments": "Generalized from resource: virtualNetworks/jpdc-dev-vnet'.",
          "type": "Microsoft.Network/virtualNetworks",
          "name": "[parameters('settings').network.devVnet]",
          "apiVersion": "2017-06-01",
          "location": "westus",
          "scale": null,
          "properties": {
              "provisioningState": "Succeeded",
              "addressSpace": {
                  "addressPrefixes": [
                      "10.5.0.0/16"
                  ]
              },
              "subnets": [
                  {
                      "name": "[parameters('settings').network.devSubnet]",
                      "properties": {
                          "provisioningState": "Succeeded",
                          "addressPrefix": "10.5.6.0/24"
                      }
                  }
              ],
              "virtualNetworkPeerings": []
          },
          "dependsOn": []
      },
    {
     "apiVersion": "2015-05-01-preview",
     "name": "JPDC-LB",
     "type": "Microsoft.Network/loadBalancers",
     "location": "[resourceGroup().location]",
     "dependsOn": [
       "[concat('Microsoft.Network/virtualNetworks/',parameters('settings').network.devVnet)]"
     ],
     "properties": {
       "frontendIPConfigurations": [
         {
           "name": "LoadBalancerFrontEnd",
           "properties": {
             "privateIPAddress": "[parameters('settings').network.devLBip]",
  	         "privateIPAllocationMethod": "Static",
             "subnet":{
               "id": "[concat(resourceId(variables('devVnetRg'), 'Microsoft.Network/virtualNetworks', variables('devVnet')), '/subnets/', variables('devSubnet'))]"
             },
             "loadBalancerBackendAddressPools": [
               {
                  "id": "[concat(variables('lbID'), '/backendAddressPools/', variables('backendpoolname'))]"
               }
             ],
             "loadBalancerInboundNatRules": []
             }
           }
         ],

       "backendAddressPools": [
         {
           "name": "[variables('backendpoolname')]"
         }
       ],
       "inboundNatRules": [],
       "loadBalancingRules": [],
       "probes": [ ]
       }
     },
    {
      "comments": "Create an Image from the specified Baseline vhd",
      "type": "Microsoft.Compute/images",
      "name": "[variables('image')]",
      "apiVersion": "[parameters('settings').apiVersions.compute]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/','JPDC-LB')]"
       ],
      "properties": {
        "storageProfile": {
          "osDisk": {
            "osType": "Linux",
            "osState": "Generalized",
            "blobUri": "[variables('imageVHDUri')]",
            "caching": "ReadWrite",
            "storageAccountType": "[parameters('settings').defaultStorageType]"
          }
        }
      }
    },
	        {
            "comments": "Generalized from resource: networkSecurityGroups/jpdc-dev-vm-nsg",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[parameters('settings').network.devVMmNsg]",
            "apiVersion": "2017-06-01",
            "location": "westus",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",

                "securityRules": [
                    {
                        "name": "default-allow-rdp",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DNS-TCP",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "53",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ],
                "defaultSecurityRules": [
                    {
                        "name": "AllowVnetInBound",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow inbound traffic from all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },

                    {
                        "name": "DenyAllInBound",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowVnetOutBound",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Outbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowInternetOutBound",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to Internet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Outbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Deny all outbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Outbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            },
            "dependsOn": []
        },
		{
		"comments": "Network Interface for this dev node, should be a static IP",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('NICName')]",
      "apiVersion": "[parameters('settings').apiVersions.network]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
         "[concat('Microsoft.Network/loadBalancers/','JPDC-LB')]",
         "[concat('Microsoft.Network/virtualNetworks/', parameters('settings').network.devVnet)]"
		 ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.45.0.26",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[concat(resourceId(variables('devVnetRg'), 'Microsoft.Network/virtualNetworks', variables('devVnet')), '/subnets/', variables('devSubnet'))]"
              },
              "loadBalancerBackendAddressPools": [
                {
                   "id": "[concat(variables('lbID'), '/backendAddressPools/', variables('backendpoolname'))]"
                }
              ],
              "loadBalancerInboundNatRules": []
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false
      }
    },


    {
      "comments": "dev Virtual Node(s). Runs fixed jobs.",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "apiVersion": "[parameters('settings').apiVersions.compute]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/images', variables('image'))]",
		    "[resourceId('Microsoft.Network/networkInterfaces', variables('NICName'))]"
      ],
      "tags": {
        "displayName": "VirtualMachine",
        "node": "devnode"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
		  "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
                            "disablePasswordAuthentication": true,
                            "ssh": {
                                "publicKeys": [
                                    {
                                        "path": "/home/jpdc-admin/.ssh/authorized_keys",
                                        "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQCl97fE4XrCoDQTL/3dMOPZNQpRCAKOWFtUImtycs7VqMZlzLZCsR5cxQVjfm4/g1bNm8xEpdD1/lh8FvP62HbpdPHiDGDLUYG8uXlG+LtxCuhrMNOTBmALx1gW5FzgcXwMVaf4zA+RJu29Qw+XXlOCRWqshi6Iju0sRwrUWjfIzw== jpdc"
                                    }
                                ]
                            }
                        }
        },
        "storageProfile": {
          "imageReference": {
            "id": "[resourceId('Microsoft.Compute/images', variables('image'))]"
          },
          "osDisk": {
            "name": "[variables('osdisk')]",
            "osType": "Linux",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('settings').defaultStorageType]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('NICName'))]"
            }
          ]
        }
      }
    }
  ]
}
